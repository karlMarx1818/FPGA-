`timescale 1 ps/ 1 ps
module measure (
    input clk,      input rst,
    input sig_in,
    output reg gate_out,    output reg[51:0]frec,
    output reg[31:0]M,      output reg[31:0]N
);
reg [25:0]cnt;//预置闸门
//reg gate0;
//reg gate1;
//wire gate_posedge;
reg [31:0]cntclk;reg [31:0]cntsig;
//assign gate_posedge = gate0&&(!gate1);
reg gate;
always @(posedge clk) begin
    if(gate_out)cntclk<=cntclk+1;
    else begin cntclk<=0;N<=cntclk?cntclk:N;end
	
end
always @(posedge sig_in or negedge rst) begin
    if(!rst)begin gate_out<=0;cntsig<=0; end
    else begin
    if (gate) gate_out<=1;
    else  gate_out<=0;
    #1
    if(gate_out)cntsig<=cntsig+1;
	else begin 	cntsig<=0;M<=cntsig?cntsig:M;end
    end
end
	 
always @(posedge clk or negedge rst) begin//开/关预置闸门
    if(!rst)begin cnt<=0;gate<=1; end
    else    begin
        cnt<=cnt+1;
        if(!cnt)gate<=~gate;
    end
end
always@(posedge clk)
begin
		frec<=50_000_000*M/N;
end
/*
always @(posedge sig_in) begin//开关实际闸门
    if (gate) gate_out<=1;
    else 
        gate_out<=0;
end
*/


endmodule